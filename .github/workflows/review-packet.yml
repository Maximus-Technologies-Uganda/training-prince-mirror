name: Build Review Packet

on:
  workflow_dispatch:
  push:
    branches: [ development ]

jobs:
  build-review-packet:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 20

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm ci

      # This is the corrected pattern: Run tests, then rename the output folder.
      - name: Run Hello Tests & Collect Coverage
        run: |
          VITEST_DISABLE_THRESHOLD=1 npm test -- tests/hello.*.test.js --coverage
          mv coverage coverage-hello
      - name: Run Stopwatch Tests & Collect Coverage
        run: |
          VITEST_DISABLE_THRESHOLD=1 npm test -- tests/stopwatch.*.test.js --coverage
          mv coverage coverage-stopwatch
      - name: Run Temp Converter Tests & Collect Coverage
        run: |
          VITEST_DISABLE_THRESHOLD=1 npm test -- tests/temp-converter.*.test.js --coverage
          mv coverage coverage-temp
      - name: Run Expense Tests & Collect Coverage
        run: |
          VITEST_DISABLE_THRESHOLD=1 npm test -- tests/expense.*.test.js --coverage
          mv coverage coverage-expense
      - name: Run To-Do Tests & Collect Coverage
        run: |
          VITEST_DISABLE_THRESHOLD=1 npm test -- tests/todo.*.test.js --coverage
          mv coverage coverage-todo
      - name: Run Quote Tests & Collect Coverage
        run: |
          VITEST_DISABLE_THRESHOLD=1 npm test -- tests/quote.*.test.js --coverage
          mv coverage coverage-quote

      - name: Build frontend and run UI tests & coverage (ui modules)
        working-directory: frontend
        run: |
          npm ci
          mkdir -p ../review-artifacts
          # ui-todo
          if [ -d src/ui-todo ]; then
            rm -rf coverage
            VITEST_DISABLE_THRESHOLD=1 npm run test -- --coverage src/ui-todo
            if [ -d coverage ]; then mv coverage ../review-artifacts/ui-coverage-todo || true; fi
          fi
          # ui-stopwatch
          if [ -d src/ui-stopwatch ]; then
            rm -rf coverage
            VITEST_DISABLE_THRESHOLD=1 npm run test -- --coverage src/ui-stopwatch
            if [ -d coverage ]; then mv coverage ../review-artifacts/ui-coverage-stopwatch || true; fi
          fi
          # ui-expense
          if [ -d src/ui-expense ]; then
            rm -rf coverage
            VITEST_DISABLE_THRESHOLD=1 npm run test -- --coverage src/ui-expense
            if [ -d coverage ]; then mv coverage ../review-artifacts/ui-coverage-expense || true; fi
          fi
          # ui-temp (if added later)
          if [ -d src/ui-temp ]; then
            rm -rf coverage
            VITEST_DISABLE_THRESHOLD=1 npm run test -- --coverage src/ui-temp
            if [ -d coverage ]; then mv coverage ../review-artifacts/ui-coverage-temp || true; fi
          fi
          # ui-quote (if added later)
          if [ -d src/ui-quote ]; then
            rm -rf coverage
            VITEST_DISABLE_THRESHOLD=1 npm run test -- --coverage src/ui-quote
            if [ -d coverage ]; then mv coverage ../review-artifacts/ui-coverage-quote || true; fi
          fi

      - name: Prepare artifact directories
        run: |
          mkdir -p review-artifacts
          mv coverage-* review-artifacts/

      - name: Generate Coverage Index
        run: |
          echo "<h1>Coverage Index</h1>" > review-artifacts/index.html
          echo "<h2>Backend Coverage</h2>" >> review-artifacts/index.html
          echo "<ul>" >> review-artifacts/index.html
          for dir in review-artifacts/coverage-*; do
            APP_NAME=$(basename "$dir" | sed 's/coverage-//')
            echo "  <li><a href=\"./${dir##*/}/lcov-report/index.html\">${APP_NAME}</a></li>" >> review-artifacts/index.html
          done
          echo "</ul>" >> review-artifacts/index.html
          echo "<h2>UI Coverage</h2>" >> review-artifacts/index.html
          echo "<ul>" >> review-artifacts/index.html
          for dir in review-artifacts/ui-coverage-*; do
            [ -d "$dir" ] || continue
            APP_NAME=$(basename "$dir" | sed 's/ui-coverage-//')
            echo "  <li><a href=\"./${dir##*/}/lcov-report/index.html\">ui-${APP_NAME}</a></li>" >> review-artifacts/index.html
          done
          echo "</ul>" >> review-artifacts/index.html

      - name: Generate review.md
        run: |
          echo "## Review Packet" > review.md
          echo "Generated: $(date)" >> review.md

      - name: Upload Review Packet Artifact
        uses: actions/upload-artifact@v4
        with:
          name: review-packet
          path: |
            review.md
            review-artifacts/
