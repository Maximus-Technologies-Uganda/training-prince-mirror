name: Update PRI-289 Status

on:
  push:
    branches:
      - feature/PRI-289-wednesday-ui-polishing
  workflow_dispatch:

jobs:
  update-status:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Update PRI-289 to In Progress
        env:
          LINEAR_API_KEY: ${{ secrets.LINEAR_API_KEY }}
        run: |
          cat > update-status.mjs << 'SCRIPT'
          import https from 'https';
          
          const API_KEY = process.env.LINEAR_API_KEY;
          const ISSUE_ID = 'PRI-289';
          
          if (!API_KEY) {
            console.error('‚ùå LINEAR_API_KEY not set');
            process.exit(1);
          }
          
          async function graphqlRequest(query, variables) {
            return new Promise((resolve, reject) => {
              const body = JSON.stringify({ query, variables });
              const req = https.request({
                method: 'POST',
                hostname: 'api.linear.app',
                path: '/graphql',
                headers: {
                  'Content-Type': 'application/json',
                  'Content-Length': Buffer.byteLength(body),
                  'Authorization': API_KEY
                }
              }, (res) => {
                let data = '';
                res.on('data', (chunk) => (data += chunk));
                res.on('end', () => {
                  try {
                    const json = JSON.parse(data);
                    if (json.errors) {
                      reject(new Error(json.errors.map(e => e.message).join('; ')));
                    } else {
                      resolve(json.data);
                    }
                  } catch (e) {
                    reject(new Error(`Parse error: ${e.message}`));
                  }
                });
              });
              req.on('error', reject);
              req.write(body);
              req.end();
            });
          }
          
          async function main() {
            try {
              console.log('üîç Getting PRI-289...');
              const issueData = await graphqlRequest(
                `query($identifier: String!) { issue(id: $identifier) { id team { id } } }`,
                { identifier: ISSUE_ID }
              );
              
              if (!issueData.issue) {
                throw new Error('Issue not found');
              }
              
              console.log('üîç Getting team states...');
              const statesData = await graphqlRequest(
                `query($teamId: String!) { team(id: $teamId) { states(first: 100) { nodes { id name } } } }`,
                { teamId: issueData.issue.team.id }
              );
              
              const inProgressState = statesData.team.states.nodes.find(
                s => s.name.toLowerCase() === 'in progress'
              );
              
              if (!inProgressState) {
                throw new Error('In Progress state not found');
              }
              
              console.log('üìù Updating to In Progress...');
              await graphqlRequest(
                `mutation($input: IssueUpdateInput!) { issueUpdate(id: $input) { success } }`,
                { input: { id: issueData.issue.id, stateId: inProgressState.id } }
              );
              
              console.log('‚úÖ PRI-289 updated to In Progress');
            } catch (err) {
              console.error('‚ùå Error:', err.message);
              process.exit(1);
            }
          }
          
          main();
          SCRIPT
          
          node update-status.mjs

